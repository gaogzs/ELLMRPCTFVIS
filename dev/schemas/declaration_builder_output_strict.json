{
  "type": "object",
  "properties": {
    "objects": {
      "type": "array",
      "description": "A list of declaration of objects exist in the story.",
      "items": {
        "type": "object",
        "properties": {
          "object_name": {
            "type": "string",
            "description": "The name of the object. Should ba a single word, a snake case lower case variable name. Example: mr_alex"
          },
          "object_description": {
            "type": "string",
            "description": "The description of the object. Should be avery short description of what object this is referring to. Example: Mr. Alex, a named character in the story"
          }
        },
        "required": [
          "object_name",
          "object_description"
        ],
        "additionalProperties": false
      }
    },
    "relations": {
      "type": "array",
      "description": "A list of declaration of relations between objects exist in the story.",
      "items": {
        "type": "object",
        "description": "A definition of a single relation. Composed of the relation declaration, a description of the relation, and a list of usage cases of the relation within the provided section of the story. No extra syntax is required to split the three parts apart since they will be in different json fields in this schema.",
        "properties": {
          "relation_name": {
            "type": "string",
            "description": "The name of the relation. Should be a single word, a snake case lower case variable name, followed by a bracket with arguments definitions. Arguments should be abstract characters like a, b, c, etc, every relation needs to take at least a time parameter at the end, preferably named as t. Example: live_in_location(a, b, t)"
          },
          "relation_description": {
            "type": "string",
            "description": "The description of the relation. Should be a very short description of what this relation is referring to with the objects it take as arguments. Referencing arguments should be encased in '[]'. Make sure it references exactly the same parameters as declared in 'relation_name' part. Example: character [a] lives in location [b] for time [t]"
          },
          "relation_cases": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "A usage case of the relation within your provided section of the story. The time parameter should be an abstract time point, like T0, T1, T2, etc. And other arguments has to be the existing object names you provided in the objects section. Nested relation structure is not allowed. Be sure it takes the exactly the same number of parameters as declared in 'relation_name' part and as described in 'relation_description' part. Example: live_in_location(mr_alex, new_york, T0)"
            }
          }
        },
        "required": [
          "relation_name",
          "relation_description",
          "relation_cases"
        ],
        "additionalProperties": false
      }
    },
    "replenishments": {
      "type": "array",
      "description": "If there are any objects referenced in the relation usage cases that are not declared in the objects section, they should be declared here.",
      "items": {
        "type": "object",
        "properties": {
          "object_name": {
            "type": "string",
            "description": "The name of the object. Should ba a single word, a snake case lower case variable name. Example: mr_alex"
          },
          "object_description": {
            "type": "string",
            "description": "The description of the object. Should be avery short description of what object this is referring to. Example: Mr. Alex, a named character in the story"
          }
        },
        "required": [
          "object_name",
          "object_description"
        ],
        "additionalProperties": false
      }
    }
  },
  "required": [
    "objects",
    "relations",
    "replenishments"
  ],
  "additionalProperties": false
}