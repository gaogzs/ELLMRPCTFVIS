[
  {
    "conversation": "AI: Maridan is a young sergeant serving in the king's knightly order. He is known for his bravery and loyalty. One day, he receives a secret mission from the king to investigate a series of mysterious disappearances in the kingdom. Maridan sets out on his quest, determined to uncover the truth and protect his people.\n(User: Maridan first decides to gather information from the villagers.)",
    "new_timeline": "T0: The time before Maridan receives the secret mission from the king.\nT1: The time when Maridan receives the secret mission and sets out on his quest.\nT2: The time when Maridan decides to gather information from the villagers.\n",
    "new_declarations": "maridan: Maridan, a named character\nsergeant: sergeant, a military rank\nking: king, a character\nknightly_order: knightly order, a group\nmission: mission, a task\ndisappearances: disappearances, an event\nkingdom: kingdom, a location\nvillagers: villagers, a group of people\n\nis_a(a, b, t): character [a] is a [b] for time [t]\nserve_in(a, b, t): character [a] serves in [b] for time [t]\nis_loyal_to(a, b, t): character [a] is loyal to character [b] for time [t]\nreceive_mission_from(a, b, c, t): character [a] receives mission [b] from character [c] for time [t]\ninvestigate(a, b, t): character [a] investigates [b] for time [t]\noccur_in(a, b, t): event [a] occurs in [b] for time [t]\ngather_information_from(a, b, t): character [a] gathers information from [b] for time [t]\n",
    "pseudo_predefinitions": "['forall(a b t). serve_in(a, b, t) -> is_loyal_to(a, king, t)']",
    "formula": "Scope: global\nForAll([a, b, t],\n       Implies(serve_in(a, b, t), is_loyal_to(a, king, t)))\nis_a(maridan, sergeant, T0)\nserve_in(maridan, knightly_order, T0)\nis_loyal_to(maridan, king, T0)\nreceive_mission_from(maridan, mission, king, T1)\ninvestigate(maridan, disappearances, T1)\noccur_in(disappearances, kingdom, T1)\ngather_information_from(maridan, villagers, T2)\nT0 < T1\nT1 < T2\n",
    "unsat_formulas": []
  },
  {
    "full_conversation": "AI: Maridan is a young sergeant serving in the king's knightly order. He is known for his bravery and loyalty. One day, he receives a secret mission from the king to investigate a series of mysterious disappearances in the kingdom. Maridan sets out on his quest, determined to uncover the truth and protect his people.\n(User: Maridan first decides to gather information from the villagers.)",
    "full_formulas": "defaultdict(<class 'list'>, {'global': [ForAll([a, b, t],\n       Implies(serve_in(a, b, t), is_loyal_to(a, king, t))), is_a(maridan, sergeant, T0), serve_in(maridan, knightly_order, T0), is_loyal_to(maridan, king, T0), receive_mission_from(maridan, mission, king, T1), investigate(maridan, disappearances, T1), occur_in(disappearances, kingdom, T1), gather_information_from(maridan, villagers, T2), T0 < T1, T1 < T2]})",
    "full_declarations": "Objects:\nmaridan: Maridan, a named character\nsergeant: sergeant, a military rank\nking: king, a character\nknightly_order: knightly order, a group\nmission: mission, a task\ndisappearances: disappearances, an event\nkingdom: kingdom, a location\nvillagers: villagers, a group of people\nRelations:\nis_a(a, b, t): character [a] is a [b] for time [t]\nserve_in(a, b, t): character [a] serves in [b] for time [t]\nis_loyal_to(a, b, t): character [a] is loyal to character [b] for time [t]\nreceive_mission_from(a, b, c, t): character [a] receives mission [b] from character [c] for time [t]\ninvestigate(a, b, t): character [a] investigates [b] for time [t]\noccur_in(a, b, t): event [a] occurs in [b] for time [t]\ngather_information_from(a, b, t): character [a] gathers information from [b] for time [t]\n",
    "full_timeline": "T0: The time before Maridan receives the secret mission from the king.\nT1: The time when Maridan receives the secret mission and sets out on his quest.\nT2: The time when Maridan decides to gather information from the villagers.\n",
    "full_scopes": ""
  }
]