[
  {
    "conversation": " Maridan is a young sergeant serving in the king's knightly order. He is known for his bravery and loyalty. One day, he receives a secret mission from the king to investigate a series of mysterious disappearances in the kingdom. Maridan sets out on his quest, determined to uncover the truth and protect his people.\n(User: Maridan first decides to gather information from the villagers.)",
    "new_timeline": "T0: The time before Maridan receives the secret mission.\nT1: The time when Maridan receives the secret mission from the king and decides to investigate the mysterious disappearances.\nT2: The time when Maridan decides to gather information from the villagers.\n",
    "new_declarations": "maridan: Maridan, a named character\nsergeant: sergeant, a type of military rank\nking: king, a character\nknightly_order: knightly order, a group\nmission: mission, an event\ndisappearances: disappearances, an event\nkingdom: kingdom, a location\nvillagers: villagers, a group of people\n\nis_a(a, b, t): character [a] is a [b] for time [t]\nserve_in(a, b, t): character [a] serves in [b] for time [t]\nis_loyal_to(a, b, t): character [a] is loyal to character [b] for time [t]\nreceive_mission_from(a, b, c, t): character [a] receives mission [b] from character [c] for time [t]\ninvestigate(a, b, t): character [a] investigates [b] for time [t]\noccur_in(a, b, t): event [a] occurs in location [b] for time [t]\ngathers_information_from(a, b, t): character [a] gathers information from [b] for time [t]\n",
    "pseudo_predefinitions": "[]",
    "formula": "Scope: global\nis_a(maridan, sergeant, T0)\nserve_in(maridan, knightly_order, T0)\nis_loyal_to(maridan, king, T0)\nreceive_mission_from(maridan, mission, king, T1)\ninvestigate(maridan, disappearances, T1)\noccur_in(disappearances, kingdom, T1)\ngathers_information_from(maridan, villagers, T2)\nT0 < T1\nT1 < T2\n",
    "unsat_formulas": []
  },
  {
    "conversation": " Maridan visits the nearby village and speaks with the villagers. They tell him about strange noises coming from the forest at night and sightings of shadowy figures. Maridan takes note of their accounts and decides to investigate the forest next.\n(User: He plans to enter the forest at dawn, hoping to find clues about the disappearances.)",
    "new_timeline": "T0: The time before Maridan receives the secret mission.\nT1: The time when Maridan receives the secret mission from the king and decides to investigate the mysterious disappearances.\nT2: The time when Maridan decides to gather information from the villagers.\nT3: The time when Maridan visits the village and speaks with the villagers about strange noises and shadowy figures.\nT4: The time when Maridan plans to enter the forest at dawn to investigate the disappearances.\n",
    "new_declarations": "maridan: Maridan, a named character\nvillage: village, a location\nvillagers: villagers, a group of people\nnoises: noises, an event\nforest: forest, a location\nnight: night, a time\nsightings: sightings, an event\nshadowy_figures: shadowy figures, a group of characters\naccounts: accounts, a collection of information\ndawn: dawn, a time\nclues: clues, a collection of information\ndisappearances: disappearances, an event\n\nvisits_location(a, b, t): character [a] visits location [b] for time [t]\nspeaks_with(a, b, t): character [a] speaks with [b] for time [t]\noccur_in(a, b, t): event [a] occurs in location [b] for time [t]\noccur_at_time(a, b, t): event [a] occurs at time [b] for time [t]\ngathers_information_from(a, b, t): character [a] gathers information from [b] for time [t]\ntakes_note_of(a, b, t): character [a] takes note of [b] for time [t]\ninvestigate(a, b, t): character [a] investigates [b] for time [t]\nhopes_to_find(a, b, c, t): character [a] hopes to find [b] about [c] for time [t]\nenter_location_at_time(a, b, c, t): character [a] enters location [b] at time [c] for time [t]\n",
    "pseudo_predefinitions": "['forall(a b t). visits_location(a, b, t) -> exists(c). enter_location_at_time(a, b, c, t)']",
    "formula": "Scope: global\nForAll([a, b, t],\n       Implies(visits_location(a, b, t),\n               Exists(c, enter_location_at_time(a, b, c, t))))\nvisits_location(maridan, village, T3)\nspeaks_with(maridan, villagers, T3)\noccur_in(noises, forest, T3)\noccur_at_time(noises, night, T3)\noccur_in(sightings, forest, T3)\noccur_at_time(sightings, night, T3)\ntakes_note_of(maridan, accounts, T3)\ninvestigate(maridan, forest, T4)\nhopes_to_find(maridan, clues, disappearances, T4)\nenter_location_at_time(maridan, forest, dawn, T4)\nT0 < T1\nT1 < T2\nT2 < T3\nT3 < T4\n",
    "unsat_formulas": []
  },
  {
    "conversation": " At dawn, Maridan enters the forest, armed with his sword and shield. The forest is dense and eerie, with sunlight barely penetrating through the thick canopy. As he ventures deeper, he hears rustling sounds and sees fleeting shadows. He remains cautious and alert, ready to confront any danger.\n(User: Maridan decides to follow the sounds, hoping they will lead him to the source of the mystery.)",
    "new_timeline": "T0: The time before Maridan receives the secret mission.\nT1: The time when Maridan receives the secret mission from the king and decides to investigate the mysterious disappearances.\nT2: The time when Maridan decides to gather information from the villagers.\nT3: The time when Maridan visits the village and speaks with the villagers about strange noises and shadowy figures.\nT4: The time when Maridan plans to enter the forest at dawn to investigate the disappearances.\nT5: The time when Maridan enters the forest at dawn, armed with his sword and shield, and decides to follow the sounds.\n",
    "new_declarations": "maridan: Maridan, a named character\nforest: forest, a location\nsword: sword, an item\nshield: shield, an item\ndawn: dawn, a time\nsunlight: sunlight, a concept\ncanopy: canopy, a part of the forest\nrustling_sounds: rustling sounds, a type of noise\nshadows: shadows, a visual effect\nmystery: mystery, an event\n\nenter_location_at_time(a, b, c, t): character [a] enters location [b] at time [c] for time [t]\nis_armed_with(a, b, t): character [a] is armed with item [b] for time [t]\nis_dense(a, t): location [a] is dense for time [t]\nis_eerie(a, t): location [a] is eerie for time [t]\npenetrate_through(a, b, t): object [a] penetrates through object [b] for time [t]\nhears_sound(a, b, t): character [a] hears sound [b] for time [t]\nsees_object(a, b, t): character [a] sees object [b] for time [t]\nhopes_to_find(a, b, c, t): character [a] hopes to find [b] about [c] for time [t]\n",
    "pseudo_predefinitions": "['forall(a b c t). enter_location_at_time(a, b, c, t) -> visits_location(a, b, t)']",
    "formula": "Scope: global\nForAll([a, b, c, t],\n       Implies(enter_location_at_time(a, b, c, t),\n               visits_location(a, b, t)))\nenter_location_at_time(maridan, forest, dawn, T5)\nis_armed_with(maridan, sword, T5)\nis_armed_with(maridan, shield, T5)\nis_dense(forest, T5)\nis_eerie(forest, T5)\nNot(penetrate_through(sunlight, canopy, T5))\nhears_sound(maridan, rustling_sounds, T5)\nsees_object(maridan, shadows, T5)\nhopes_to_find(maridan, mystery, mystery, T5)\n",
    "unsat_formulas": []
  },
  {
    "conversation": " Maridan follows the sounds cautiously, moving through the underbrush. He comes across a clearing where he sees a group of hooded figures performing a ritual. They seem to be summoning something dark and sinister. Maridan realizes that these figures are behind the disappearances and decides to confront them.\n(User: He prepares to fight the hooded figures, ready to protect the kingdom.)",
    "new_timeline": "T0: The time before Maridan receives the secret mission.\nT1: The time when Maridan receives the secret mission from the king and decides to investigate the mysterious disappearances.\nT2: The time when Maridan decides to gather information from the villagers.\nT3: The time when Maridan visits the village and speaks with the villagers about strange noises and shadowy figures.\nT4: The time when Maridan plans to enter the forest at dawn to investigate the disappearances.\nT5: The time when Maridan enters the forest at dawn, armed with his sword and shield, and decides to follow the sounds.\nT6: The time when Maridan follows the sounds, discovers the clearing, and witnesses the hooded figures performing a ritual.\nT7: The time when Maridan realizes the hooded figures are behind the disappearances and prepares to fight them to protect the kingdom.\n",
    "new_declarations": "maridan: Maridan, a named character\nsounds: sounds, a type of noise\nunderbrush: underbrush, a location\nclearing: clearing, a location\nhooded_figures: hooded figures, a group of characters\nritual: ritual, an event\nkingdom: kingdom, a location\ndisappearances: disappearances, an event\n\nhears_sound(a, b, t): character [a] hears sound [b] for time [t]\nmoves_through(a, b, t): character [a] moves through location [b] for time [t]\nsees_object(a, b, t): character [a] sees object [b] for time [t]\nperform_ritual(a, b, t): character [a] performs ritual [b] for time [t]\nbehind_event(a, b, t): character [a] is behind event [b] for time [t]\nready_to_fight(a, b, t): character [a] is ready to fight [b] for time [t]\nprotects_location(a, b, t): character [a] protects location [b] for time [t]\n",
    "pseudo_predefinitions": "['forall(a b t). hears_sound(a, b, t) -> takes_note_of(a, b, t)', 'forall(a b t). moves_through(a, b, t) -> visits_location(a, b, t)', 'forall(a b t). perform_ritual(a, b, t) -> occur_in(b, kingdom, t)', 'forall(a b t). behind_event(a, b, t) -> investigate(a, b, t)', 'forall(a b c t). protects_location(a, b, t) and is_loyal_to(a, c, t) -> is_loyal_to(b, c, t)']",
    "formula": "Scope: global\nForAll([a, b, t],\n       Implies(hears_sound(a, b, t), takes_note_of(a, b, t)))\nForAll([a, b, t],\n       Implies(moves_through(a, b, t),\n               visits_location(a, b, t)))\nForAll([a, b, t],\n       Implies(perform_ritual(a, b, t),\n               occur_in(b, kingdom, t)))\nForAll([a, b, t],\n       Implies(behind_event(a, b, t), investigate(a, b, t)))\nForAll([a, b, c, t],\n       Implies(And(protects_location(a, b, t),\n                   is_loyal_to(a, c, t)),\n               is_loyal_to(b, c, t)))\nhears_sound(maridan, sounds, T6)\nmoves_through(maridan, underbrush, T6)\nsees_object(maridan, hooded_figures, T6)\nperform_ritual(hooded_figures, ritual, T6)\nbehind_event(hooded_figures, disappearances, T6)\nready_to_fight(maridan, hooded_figures, T7)\nprotects_location(maridan, kingdom, T7)\n",
    "unsat_formulas": []
  },
  {
    "conversation": " As Maridan steps forward, the hooded figures suddenly disappeared, leaving behind a dark mist. Maridan feels a chill run down his spine but remains resolute. He searches the clearing for any clues and finds nothing, he had no choice but to return to the order and report his findings to the king. He vows to continue his investigation and protect the kingdom from any threats.\n(User: Maridan returns to the order and informs the king about the hooded figures and the dark ritual he witnessed.)",
    "new_timeline": "T0: The time before Maridan receives the secret mission.\nT1: The time when Maridan receives the secret mission from the king and decides to investigate the mysterious disappearances.\nT2: The time when Maridan decides to gather information from the villagers.\nT3: The time when Maridan visits the village and speaks with the villagers about strange noises and shadowy figures.\nT4: The time when Maridan plans to enter the forest at dawn to investigate the disappearances.\nT5: The time when Maridan enters the forest at dawn, armed with his sword and shield, and decides to follow the sounds.\nT6: The time when Maridan follows the sounds, discovers the clearing, and witnesses the hooded figures performing a ritual.\nT7: The time when Maridan realizes the hooded figures are behind the disappearances and prepares to fight them to protect the kingdom.\nT8: The time when Maridan steps forward, the hooded figures disappear, and he searches the clearing for clues.\nT9: The time when Maridan returns to the order and informs the king about the hooded figures and the dark ritual he witnessed.\n",
    "new_declarations": "maridan: Maridan, a named character\nhooded_figures: hooded figures, a group of characters\ndark_mist: dark mist, a type of mist\nclearing: clearing, a location\norder: order, a group\nking: king, a character\nkingdom: kingdom, a location\nthreats: threats, a concept\n\ndisappear(a, t): character [a] disappear for time [t]\nleave_behind(a, b, t): character [a] leaves behind object [b] for time [t]\nfeel_chill(a, t): character [a] feels chill for time [t]\nsearch_location(a, b, t): character [a] searches location [b] for time [t]\nreturn_to(a, b, t): character [a] returns to location [b] for time [t]\nreport_to(a, b, c, t): character [a] reports object [b] to character [c] for time [t]\nvow_to(a, b, t): character [a] vows to do [b] for time [t]\nprotects_location(a, b, t): character [a] protects location [b] for time [t]\n",
    "pseudo_predefinitions": "['forall(a t). disappear(a, t) -> not(is_a(a, hooded_figures, t))', 'forall(a b t). search_location(a, b, t) -> visits_location(a, b, t)', 'forall(a b c t). report_to(a, b, c, t) -> speaks_with(a, c, t)', 'forall(a b t). protects_location(a, b, t) -> ready_to_fight(a, b, t)']",
    "formula": "Scope: global\nForAll([a, t],\n       Implies(disappear(a, t),\n               Not(is_a(a, hooded_figures, t))))\nForAll([a, b, t],\n       Implies(search_location(a, b, t),\n               visits_location(a, b, t)))\nForAll([a, b, c, t],\n       Implies(report_to(a, b, c, t), speaks_with(a, c, t)))\nForAll([a, b, t],\n       Implies(protects_location(a, b, t),\n               ready_to_fight(a, b, t)))\ndisappear(hooded_figures, T8)\nleave_behind(hooded_figures, dark_mist, T8)\nfeel_chill(maridan, T8)\nsearch_location(maridan, clearing, T8)\nreturn_to(maridan, order, T9)\nreport_to(maridan, hooded_figures, king, T9)\nvow_to(maridan,\n       If(protects_location(maridan, kingdom, T9), 1, 0),\n       T9)\n",
    "unsat_formulas": []
  },
  {
    "conversation": " The king was furious about Maridan's report. He relieved Maridan of his duties and sent him to the dungeons for failing to protect the kingdom. Maridan, now a prisoner, vows to escape and continue his quest to uncover the truth behind the mysterious disappearances. He knows that he must find a way to clear his name and prove his loyalty to the king.\n(User: Maridan starts planning his escape from the dungeons.)",
    "new_timeline": "T0: The time before Maridan receives the secret mission.\nT1: The time when Maridan receives the secret mission from the king and decides to investigate the mysterious disappearances.\nT2: The time when Maridan decides to gather information from the villagers.\nT3: The time when Maridan visits the village and speaks with the villagers about strange noises and shadowy figures.\nT4: The time when Maridan plans to enter the forest at dawn to investigate the disappearances.\nT5: The time when Maridan enters the forest at dawn, armed with his sword and shield, and decides to follow the sounds.\nT6: The time when Maridan follows the sounds, discovers the clearing, and witnesses the hooded figures performing a ritual.\nT7: The time when Maridan realizes the hooded figures are behind the disappearances and prepares to fight them to protect the kingdom.\nT8: The time when Maridan steps forward, the hooded figures disappear, and he searches the clearing for clues.\nT9: The time when Maridan returns to the order and informs the king about the hooded figures and the dark ritual he witnessed.\nT10: The time when the king was furious, relieved Maridan of his duties, and sent him to the dungeons.\nT11: The time when Maridan, now a prisoner, vows to escape and continue his quest.\nT12: The time when Maridan starts planning his escape from the dungeons.\n",
    "new_declarations": "king: king, a character\nmaridan: Maridan, a named character\nreport: report, a document\nduties: duties, a type of work\ndungeons: dungeons, a location\nprisoner: prisoner, a character\nquest: quest, an event\ntruth: truth, a concept\ndisappearances: disappearances, an event\nkingdom: kingdom, a location\nname: name, a concept\nloyalty: loyalty, a concept\nescape: escape, an event\nplan: plan, a concept\n\nwas_furious_about(a, b, t): character [a] was furious about [b] for time [t]\nreport_of(a, b, t): report [a] belongs to character [b] for time [t]\nrelieve_of(a, b, c, t): character [a] relieve character [b] of [c] for time [t]\nsend_to(a, b, c, t): character [a] send character [b] to location [c] for time [t]\nfail_to(a, b, t): character [a] fails to do [b] for time [t]\nprotects_location(a, b, t): character [a] protects location [b] for time [t]\nis_prisoner(a, t): character [a] is a prisoner for time [t]\nvow_to(a, b, t): character [a] vows to do [b] for time [t]\ncontinue_quest(a, b, t): character [a] continues quest [b] for time [t]\nuncover(a, b, t): character [a] uncover [b] for time [t]\nbehind_event(a, b, t): character [a] is behind event [b] for time [t]\nfind_way(a, b, t): character [a] find a way to do [b] for time [t]\nclear_name(a, t): character [a] clear his name for time [t]\nprove_loyalty(a, b, t): character [a] prove loyalty to character [b] for time [t]\nplan_escape(a, b, c, t): character [a] starts planning [b] from [c] for time [t]\n",
    "pseudo_predefinitions": "['forall(a b t). report_of(a, b, t) -> report_to(a, b, b, t)', 'forall(a b t). is_prisoner(a, t) -> not(clear_name(a, t))', 'forall(a b c t). plan_escape(a, b, c, t) -> find_way(a, b, t)']",
    "formula": "Scope: global\nForAll([a, b, t],\n       Implies(report_of(a, b, t), report_to(a, b, b, t)))\nForAll([a, b, t],\n       Implies(is_prisoner(a, t), Not(clear_name(a, t))))\nForAll([a, b, c, t],\n       Implies(plan_escape(a, b, c, t), find_way(a, b, t)))\nwas_furious_about(king, report, T10)\nreport_of(report, maridan, T10)\nrelieve_of(king, maridan, duties, T10)\nsend_to(king, maridan, dungeons, T10)\nis_prisoner(maridan, T11)\nvow_to(maridan, escape, T11)\ncontinue_quest(maridan, quest, T11)\nplan_escape(maridan, escape, dungeons, T12)\nT10 < T11\nT11 < T12\n",
    "unsat_formulas": []
  },
  {
    "conversation": " Maridan begins to observe the guards' routines and looks for weaknesses in the dungeon's security. As a former sergeant, he knows how to exploit such vulnerabilities. He manages to find a loose stone in the wall of his cell and starts digging a tunnel. After several days of careful planning and hard work, he finally creates an escape route.\n(User: Maridan waits for the right moment when the guards are distracted to make his escape.)",
    "new_timeline": "T0: The time before Maridan receives the secret mission.\nT1: The time when Maridan receives the secret mission from the king and decides to investigate the mysterious disappearances.\nT2: The time when Maridan decides to gather information from the villagers.\nT3: The time when Maridan visits the village and speaks with the villagers about strange noises and shadowy figures.\nT4: The time when Maridan plans to enter the forest at dawn to investigate the disappearances.\nT5: The time when Maridan enters the forest at dawn, armed with his sword and shield, and decides to follow the sounds.\nT6: The time when Maridan follows the sounds, discovers the clearing, and witnesses the hooded figures performing a ritual.\nT7: The time when Maridan realizes the hooded figures are behind the disappearances and prepares to fight them to protect the kingdom.\nT8: The time when Maridan steps forward, the hooded figures disappear, and he searches the clearing for clues.\nT9: The time when Maridan returns to the order and informs the king about the hooded figures and the dark ritual he witnessed.\nT10: The time when the king was furious, relieved Maridan of his duties, and sent him to the dungeons.\nT11: The time when Maridan, now a prisoner, vows to escape and continue his quest.\nT12: The time when Maridan starts planning his escape from the dungeons.\nT13: The time when Maridan observes the guards' routines and digs a tunnel.\nT14: The time when Maridan waits for the right moment to escape.\n",
    "new_declarations": "maridan: Maridan, a named character\nsergeant: sergeant, a type of military rank\nguards: guards, a group of characters\nroutines: routines, a set of actions\nweaknesses: weaknesses, a concept\ndungeon: dungeon, a location\nsecurity: security, a concept\nstone: stone, an item\nwall: wall, a part of the dungeon\ncell: cell, a location\ntunnel: tunnel, a location\nescape_route: escape route, a location\nmoment: moment, a time\nescape: escape, an event\n\nis_a(a, b, t): character [a] is a [b] for time [t]\nobserve(a, b, t): character [a] observe [b] for time [t]\nbelong_to(a, b, t): [a] belongs to [b] for time [t]\nlook_for(a, b, c, t): character [a] looks for [b] in [c] for time [t]\nin_location(a, b, t): object [a] is in location [b] for time [t]\nexploit(a, b, t): character [a] exploits [b] for time [t]\nfind_object(a, b, c, t): character [a] find object [b] in [c] for time [t]\ndig(a, b, t): character [a] digs [b] for time [t]\ncreate(a, b, t): character [a] creates [b] for time [t]\nwait_for(a, b, t): character [a] waits for [b] for time [t]\nis_distracted(a, t): character [a] is distracted for time [t]\nmake(a, b, t): character [a] makes [b] for time [t]\n",
    "pseudo_predefinitions": "['forall(a b t). is_a(a, b, t) -> is_a(a, b, t)', 'forall(a b t). in_location(a, b, t) -> occur_in(a, b, t)', 'forall(a b c t). find_object(a, b, c, t) -> in_location(b, c, t)']",
    "formula": "Scope: global\nForAll([a, b, t], Implies(is_a(a, b, t), is_a(a, b, t)))\nForAll([a, b, t],\n       Implies(in_location(a, b, t), occur_in(a, b, t)))\nForAll([a, b, c, t],\n       Implies(find_object(a, b, c, t),\n               in_location(b, c, t)))\nis_a(maridan, sergeant, T13)\nobserve(maridan, routines, T13)\nlook_for(maridan, weaknesses, security, T13)\nexploit(maridan, weaknesses, T13)\nfind_object(maridan, stone, wall, T13)\ndig(maridan, tunnel, T13)\ncreate(maridan, escape_route, T13)\nwait_for(maridan, moment, T14)\nExists(t, And(is_distracted(guards, t), T14 < t))\nExists(t, make(maridan, escape, t))\n",
    "unsat_formulas": []
  },
  {
    "full_conversation": " Maridan is a young sergeant serving in the king's knightly order. He is known for his bravery and loyalty. One day, he receives a secret mission from the king to investigate a series of mysterious disappearances in the kingdom. Maridan sets out on his quest, determined to uncover the truth and protect his people.\n(User: Maridan first decides to gather information from the villagers.)\n Maridan visits the nearby village and speaks with the villagers. They tell him about strange noises coming from the forest at night and sightings of shadowy figures. Maridan takes note of their accounts and decides to investigate the forest next.\n(User: He plans to enter the forest at dawn, hoping to find clues about the disappearances.)\n At dawn, Maridan enters the forest, armed with his sword and shield. The forest is dense and eerie, with sunlight barely penetrating through the thick canopy. As he ventures deeper, he hears rustling sounds and sees fleeting shadows. He remains cautious and alert, ready to confront any danger.\n(User: Maridan decides to follow the sounds, hoping they will lead him to the source of the mystery.)\n Maridan follows the sounds cautiously, moving through the underbrush. He comes across a clearing where he sees a group of hooded figures performing a ritual. They seem to be summoning something dark and sinister. Maridan realizes that these figures are behind the disappearances and decides to confront them.\n(User: He prepares to fight the hooded figures, ready to protect the kingdom.)\n As Maridan steps forward, the hooded figures suddenly disappeared, leaving behind a dark mist. Maridan feels a chill run down his spine but remains resolute. He searches the clearing for any clues and finds nothing, he had no choice but to return to the order and report his findings to the king. He vows to continue his investigation and protect the kingdom from any threats.\n(User: Maridan returns to the order and informs the king about the hooded figures and the dark ritual he witnessed.)\n The king was furious about Maridan's report. He relieved Maridan of his duties and sent him to the dungeons for failing to protect the kingdom. Maridan, now a prisoner, vows to escape and continue his quest to uncover the truth behind the mysterious disappearances. He knows that he must find a way to clear his name and prove his loyalty to the king.\n(User: Maridan starts planning his escape from the dungeons.)\n Maridan begins to observe the guards' routines and looks for weaknesses in the dungeon's security. As a former sergeant, he knows how to exploit such vulnerabilities. He manages to find a loose stone in the wall of his cell and starts digging a tunnel. After several days of careful planning and hard work, he finally creates an escape route.\n(User: Maridan waits for the right moment when the guards are distracted to make his escape.)",
    "full_formulas": "defaultdict(<class 'list'>, {'global': [is_a(maridan, sergeant, T0), serve_in(maridan, knightly_order, T0), is_loyal_to(maridan, king, T0), receive_mission_from(maridan, mission, king, T1), investigate(maridan, disappearances, T1), occur_in(disappearances, kingdom, T1), gathers_information_from(maridan, villagers, T2), T0 < T1, T1 < T2]})\ndefaultdict(<class 'list'>, {'global': [ForAll([a, b, t],\n       Implies(visits_location(a, b, t),\n               Exists(c, enter_location_at_time(a, b, c, t)))), visits_location(maridan, village, T3), speaks_with(maridan, villagers, T3), occur_in(noises, forest, T3), occur_at_time(noises, night, T3), occur_in(sightings, forest, T3), occur_at_time(sightings, night, T3), takes_note_of(maridan, accounts, T3), investigate(maridan, forest, T4), hopes_to_find(maridan, clues, disappearances, T4), enter_location_at_time(maridan, forest, dawn, T4), T0 < T1, T1 < T2, T2 < T3, T3 < T4]})\ndefaultdict(<class 'list'>, {'global': [ForAll([a, b, c, t],\n       Implies(enter_location_at_time(a, b, c, t),\n               visits_location(a, b, t))), enter_location_at_time(maridan, forest, dawn, T5), is_armed_with(maridan, sword, T5), is_armed_with(maridan, shield, T5), is_dense(forest, T5), is_eerie(forest, T5), Not(penetrate_through(sunlight, canopy, T5)), hears_sound(maridan, rustling_sounds, T5), sees_object(maridan, shadows, T5), hopes_to_find(maridan, mystery, mystery, T5)]})\ndefaultdict(<class 'list'>, {'global': [ForAll([a, b, t],\n       Implies(hears_sound(a, b, t), takes_note_of(a, b, t))), ForAll([a, b, t],\n       Implies(moves_through(a, b, t),\n               visits_location(a, b, t))), ForAll([a, b, t],\n       Implies(perform_ritual(a, b, t),\n               occur_in(b, kingdom, t))), ForAll([a, b, t],\n       Implies(behind_event(a, b, t), investigate(a, b, t))), ForAll([a, b, c, t],\n       Implies(And(protects_location(a, b, t),\n                   is_loyal_to(a, c, t)),\n               is_loyal_to(b, c, t))), hears_sound(maridan, sounds, T6), moves_through(maridan, underbrush, T6), sees_object(maridan, hooded_figures, T6), perform_ritual(hooded_figures, ritual, T6), behind_event(hooded_figures, disappearances, T6), ready_to_fight(maridan, hooded_figures, T7), protects_location(maridan, kingdom, T7)]})\ndefaultdict(<class 'list'>, {'global': [ForAll([a, t],\n       Implies(disappear(a, t),\n               Not(is_a(a, hooded_figures, t)))), ForAll([a, b, t],\n       Implies(search_location(a, b, t),\n               visits_location(a, b, t))), ForAll([a, b, c, t],\n       Implies(report_to(a, b, c, t), speaks_with(a, c, t))), ForAll([a, b, t],\n       Implies(protects_location(a, b, t),\n               ready_to_fight(a, b, t))), disappear(hooded_figures, T8), leave_behind(hooded_figures, dark_mist, T8), feel_chill(maridan, T8), search_location(maridan, clearing, T8), return_to(maridan, order, T9), report_to(maridan, hooded_figures, king, T9), vow_to(maridan,\n       If(protects_location(maridan, kingdom, T9), 1, 0),\n       T9)]})\ndefaultdict(<class 'list'>, {'global': [ForAll([a, b, t],\n       Implies(report_of(a, b, t), report_to(a, b, b, t))), ForAll([a, b, t],\n       Implies(is_prisoner(a, t), Not(clear_name(a, t)))), ForAll([a, b, c, t],\n       Implies(plan_escape(a, b, c, t), find_way(a, b, t))), was_furious_about(king, report, T10), report_of(report, maridan, T10), relieve_of(king, maridan, duties, T10), send_to(king, maridan, dungeons, T10), is_prisoner(maridan, T11), vow_to(maridan, escape, T11), continue_quest(maridan, quest, T11), plan_escape(maridan, escape, dungeons, T12), T10 < T11, T11 < T12]})\ndefaultdict(<class 'list'>, {'global': [ForAll([a, b, t], Implies(is_a(a, b, t), is_a(a, b, t))), ForAll([a, b, t],\n       Implies(in_location(a, b, t), occur_in(a, b, t))), ForAll([a, b, c, t],\n       Implies(find_object(a, b, c, t),\n               in_location(b, c, t))), is_a(maridan, sergeant, T13), observe(maridan, routines, T13), look_for(maridan, weaknesses, security, T13), exploit(maridan, weaknesses, T13), find_object(maridan, stone, wall, T13), dig(maridan, tunnel, T13), create(maridan, escape_route, T13), wait_for(maridan, moment, T14), Exists(t, And(is_distracted(guards, t), T14 < t)), Exists(t, make(maridan, escape, t))]})",
    "full_declarations": "Objects:\nmaridan: Maridan, a named character\nsergeant: sergeant, a type of military rank\nking: king, a character\nknightly_order: knightly order, a group\nmission: mission, an event\ndisappearances: disappearances, an event\nkingdom: kingdom, a location\nvillagers: villagers, a group of people\nvillage: village, a location\nnoises: noises, an event\nforest: forest, a location\nnight: night, a time\nsightings: sightings, an event\nshadowy_figures: shadowy figures, a group of characters\naccounts: accounts, a collection of information\ndawn: dawn, a time\nclues: clues, a collection of information\nsword: sword, an item\nshield: shield, an item\nsunlight: sunlight, a concept\ncanopy: canopy, a part of the forest\nrustling_sounds: rustling sounds, a type of noise\nshadows: shadows, a visual effect\nmystery: mystery, an event\nsounds: sounds, a type of noise\nunderbrush: underbrush, a location\nclearing: clearing, a location\nhooded_figures: hooded figures, a group of characters\nritual: ritual, an event\ndark_mist: dark mist, a type of mist\norder: order, a group\nthreats: threats, a concept\nreport: report, a document\nduties: duties, a type of work\ndungeons: dungeons, a location\nprisoner: prisoner, a character\nquest: quest, an event\ntruth: truth, a concept\nname: name, a concept\nloyalty: loyalty, a concept\nescape: escape, an event\nplan: plan, a concept\nguards: guards, a group of characters\nroutines: routines, a set of actions\nweaknesses: weaknesses, a concept\ndungeon: dungeon, a location\nsecurity: security, a concept\nstone: stone, an item\nwall: wall, a part of the dungeon\ncell: cell, a location\ntunnel: tunnel, a location\nescape_route: escape route, a location\nmoment: moment, a time\nRelations:\nis_a(a, b, t): character [a] is a [b] for time [t]\nserve_in(a, b, t): character [a] serves in [b] for time [t]\nis_loyal_to(a, b, t): character [a] is loyal to character [b] for time [t]\nreceive_mission_from(a, b, c, t): character [a] receives mission [b] from character [c] for time [t]\ninvestigate(a, b, t): character [a] investigates [b] for time [t]\noccur_in(a, b, t): event [a] occurs in location [b] for time [t]\ngathers_information_from(a, b, t): character [a] gathers information from [b] for time [t]\nvisits_location(a, b, t): character [a] visits location [b] for time [t]\nspeaks_with(a, b, t): character [a] speaks with [b] for time [t]\noccur_at_time(a, b, t): event [a] occurs at time [b] for time [t]\ntakes_note_of(a, b, t): character [a] takes note of [b] for time [t]\nhopes_to_find(a, b, c, t): character [a] hopes to find [b] about [c] for time [t]\nenter_location_at_time(a, b, c, t): character [a] enters location [b] at time [c] for time [t]\nis_armed_with(a, b, t): character [a] is armed with item [b] for time [t]\nis_dense(a, t): location [a] is dense for time [t]\nis_eerie(a, t): location [a] is eerie for time [t]\npenetrate_through(a, b, t): object [a] penetrates through object [b] for time [t]\nhears_sound(a, b, t): character [a] hears sound [b] for time [t]\nsees_object(a, b, t): character [a] sees object [b] for time [t]\nmoves_through(a, b, t): character [a] moves through location [b] for time [t]\nperform_ritual(a, b, t): character [a] performs ritual [b] for time [t]\nbehind_event(a, b, t): character [a] is behind event [b] for time [t]\nready_to_fight(a, b, t): character [a] is ready to fight [b] for time [t]\nprotects_location(a, b, t): character [a] protects location [b] for time [t]\ndisappear(a, t): character [a] disappear for time [t]\nleave_behind(a, b, t): character [a] leaves behind object [b] for time [t]\nfeel_chill(a, t): character [a] feels chill for time [t]\nsearch_location(a, b, t): character [a] searches location [b] for time [t]\nreturn_to(a, b, t): character [a] returns to location [b] for time [t]\nreport_to(a, b, c, t): character [a] reports object [b] to character [c] for time [t]\nvow_to(a, b, t): character [a] vows to do [b] for time [t]\nwas_furious_about(a, b, t): character [a] was furious about [b] for time [t]\nreport_of(a, b, t): report [a] belongs to character [b] for time [t]\nrelieve_of(a, b, c, t): character [a] relieve character [b] of [c] for time [t]\nsend_to(a, b, c, t): character [a] send character [b] to location [c] for time [t]\nfail_to(a, b, t): character [a] fails to do [b] for time [t]\nis_prisoner(a, t): character [a] is a prisoner for time [t]\ncontinue_quest(a, b, t): character [a] continues quest [b] for time [t]\nuncover(a, b, t): character [a] uncover [b] for time [t]\nfind_way(a, b, t): character [a] find a way to do [b] for time [t]\nclear_name(a, t): character [a] clear his name for time [t]\nprove_loyalty(a, b, t): character [a] prove loyalty to character [b] for time [t]\nplan_escape(a, b, c, t): character [a] starts planning [b] from [c] for time [t]\nobserve(a, b, t): character [a] observe [b] for time [t]\nbelong_to(a, b, t): [a] belongs to [b] for time [t]\nlook_for(a, b, c, t): character [a] looks for [b] in [c] for time [t]\nin_location(a, b, t): object [a] is in location [b] for time [t]\nexploit(a, b, t): character [a] exploits [b] for time [t]\nfind_object(a, b, c, t): character [a] find object [b] in [c] for time [t]\ndig(a, b, t): character [a] digs [b] for time [t]\ncreate(a, b, t): character [a] creates [b] for time [t]\nwait_for(a, b, t): character [a] waits for [b] for time [t]\nis_distracted(a, t): character [a] is distracted for time [t]\nmake(a, b, t): character [a] makes [b] for time [t]\n",
    "full_timeline": "T0: The time before Maridan receives the secret mission.\nT1: The time when Maridan receives the secret mission from the king and decides to investigate the mysterious disappearances.\nT2: The time when Maridan decides to gather information from the villagers.\nT3: The time when Maridan visits the village and speaks with the villagers about strange noises and shadowy figures.\nT4: The time when Maridan plans to enter the forest at dawn to investigate the disappearances.\nT5: The time when Maridan enters the forest at dawn, armed with his sword and shield, and decides to follow the sounds.\nT6: The time when Maridan follows the sounds, discovers the clearing, and witnesses the hooded figures performing a ritual.\nT7: The time when Maridan realizes the hooded figures are behind the disappearances and prepares to fight them to protect the kingdom.\nT8: The time when Maridan steps forward, the hooded figures disappear, and he searches the clearing for clues.\nT9: The time when Maridan returns to the order and informs the king about the hooded figures and the dark ritual he witnessed.\nT10: The time when the king was furious, relieved Maridan of his duties, and sent him to the dungeons.\nT11: The time when Maridan, now a prisoner, vows to escape and continue his quest.\nT12: The time when Maridan starts planning his escape from the dungeons.\nT13: The time when Maridan observes the guards' routines and digs a tunnel.\nT14: The time when Maridan waits for the right moment to escape.\n",
    "full_scopes": ""
  }
]