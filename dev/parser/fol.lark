// FOL Language Grammar

// Tokens
IDENT          : /[a-zA-Z][a-zA-Z0-9_]*/            // Variables, predicates, and function names
CONST          : /[0-9]+/                        // Numeric constants
%import common.WS
%ignore WS

// Grammar rules
?start: formula
?formula       : quant_formula                    -> formula
               | binary_formula                   -> formula
               | atom                              -> formula

?quant_formula : "forall" var_list "." formula    -> forall
               | "exists" var_list "." formula    -> exists

?var_list      : IDENT+                           -> var_list
               | IDENT ("," IDENT)*                     -> var_list
               | "("IDENT+")"                     -> var_list
               | "("IDENT ("," IDENT)*")"                     -> var_list

?binary_formula: formula "<->" formula               -> iff
               | formula "->" formula           -> imply
               | formula " or " formula               -> lor
               | formula " and " formula              -> land
               | "not" "("formula")"                      -> lnot
               | "not " formula                      -> lnot
               | "(" formula ")"               -> formula

?atom          : IDENT "(" [term_list] ")"     -> func
               | IDENT                           -> var
               | atom relop atom                  -> relation

?term_list     : atom ("," atom)*


?relop         : "<="      -> le
               | ">="      -> ge
               | "<"      -> lt
               | ">"      -> gt
               | "="      -> eq
               | "!="      -> ne
